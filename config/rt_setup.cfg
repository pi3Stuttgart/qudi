global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    module_server:
        address: 'localhost'
        port: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'
  
hardware:
    nicard:
        module.Class: 'national_instruments_x_series.NationalInstrumentsXSeries'
        clock_channel: '/Dev1/Ctr2'
        scanner_clock_channel: '/Dev1/Ctr2'
        photon_sources: ['/Dev1/PFI0']
        counter_channels: ['/Dev1/PFI0']
        scanner_counter_channels: ['/Dev1/Ctr3']
        gate_in_channel: '/Dev1/PFI10'
        odmr_trigger_channel: '/Dev1/PFI3'
        odmr_trigger_line: 'Dev1/port0/line0'
        odmr_switch_line: 'Dev1/port0/line1'
        counting_edge_rising: True
        clock_frequency: 100
        scanner_clock_frequency: 100
        scanner_ao_channels:
            - '/Dev1/AO0'
            - '/Dev1/AO1'
            - '/Dev1/AO2'
        #    - '/Dev1/AO3'
        scanner_voltage_ranges:
            - [0,10]
            - [0,10]
            - [0,10]
        #    - [0,1.5]
        scanner_position_ranges:
            - [0,70e-6]
            - [0,70e-6]
            - [-25e-6,25e-6]
        a_voltage: 1.5
        a_other: True
        samples_number: 50

            
    oceanviewspectrometer:
        module.Class: 'spectrometer.oceanoptics_spectrometer.OceanOptics'
        spectrometer_serial: 'QEP01583' #insert here the right serial number.
    timetagger:
        module.Class: 'swabian_instruments.time_tagger_client.TimeTaggerClient'
        corr:
            channels: [0,1]
            bins_width: 1000
            n_values: 1000
        counter:
            channels: [0,1]
            bins_width: 1000000000000
            n_values: 100
        combiner:
            channels: [0,1]
    pulser:
        module.Class: 'swabian_instruments.pulser_client.PulserClient'
    tt_counter:
        module.Class: 'swabian_instruments.timetagger_counter.TimeTaggerCounter'
        timetagger_channel_apd_0: 0
        timetagger_channel_apd_1: 1
        timetagger_sum_channels: True
        connect:
            timetagger: "timetagger"
    ello_flip:
        module.Class: 'ello.ello_flip.ThorlabsElloFlipper'
        port: 0

    powermeter:
        module.Class: 'powermeter.PM100D.PM100D'
        address: 'USB0::0x1313::0x8078::PM003467::INSTR'
    
    motor_pi3: 
        module.Class: 'motor.motordriver_pi3.Motordriver'
        port: 'COM4'
        active_motor_numbers: [0]
    
    digital_switch_pulser:
        module.Class: 'switches.pulser_switch.DigitalSwitchPulser'
        channels: ['ch1', 'ch5', 'ch6']  # optional
        name: 'pulser'  # optional
        switch_time: 0.1
        remember_states: False
        switches:                       # optional
            laser: ['off', 'on']
            powermeter: ['off', 'on']
            spectrometer: ['off', 'on']
        connect:
            pulser: 'pulser'

logic:
    counterlogic:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'tt_counter'
            savelogic: 'savelogic'
    spectrumlogic:
        module.Class: 'spectrum.SpectrumLogic'
        connect:
            spectrometer: 'oceanviewspectrometer'
            #  princeton: 'princeton_client' 
            #nicard: 'nicard_6229'
            # cwavelaser: 'cwavelaser'
            #ello_devices: 'ello_devices'
            pulser: 'pulser'
            savelogic: 'savelogic'
            fitlogic: 'fitlogic'

    scannerlogic:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'savelogic'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'nicard'

    optimizerlogic:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fitlogic'

    savelogic:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'C:/Data'   # DO NOT CHANGE THE DIRECTORY HERE! ONLY IN THE CUSTOM FILE!
        unix_data_directory: 'Data/'
        log_into_daily_directory: True
        save_pdf: True
        save_png: True
    
    switchlogic:
        module.Class: 'switch_logic.SwitchLogic'
        watchdog_interval: 1
        autostart_watchdog: True
        connect:
            switch: 'digital_switch_pulser'

    automation:
        module.Class: 'automation_pi3.Automatedmeasurement'
        savelogic: 'savelogic'
        optimizerlogic: 'optimizerlogic'
        scannerlogic: 'scannerlogic'
        spectrumlogic: 'spectrumlogic'

    fitlogic:
        module.Class: 'fit_logic.FitLogic'
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

gui:
    counter:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counterlogic'

    confocal:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scannerlogic'
            savelogic: 'savelogic'
            optimizerlogic1: 'optimizerlogic'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02
        default_meter_prefix: 'u'
        involves_cryostat: False
    switches:
        module.Class: 'switch.switch_gui.SwitchGui'
        connect:
            switchlogic: 'switchlogic'

    spectrometer:
        module.Class: 'spectrometer.spectrometergui.SpectrometerGui'
        connect:
            spectrumlogic: 'spectrumlogic'
    tray:
        module.Class: 'trayicon.TrayIcon'

    man:
        module.Class: 'manager.managergui.ManagerGui'

